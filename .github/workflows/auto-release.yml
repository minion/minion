name: Create Release Builds

on:
  workflow_dispatch:
  push:
    tags:
      - "v*" # matches v1.0.1, v1.2, v2, etc


jobs:
  build:
    name: Create cross-platform release build, tag and upload binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
        - os: ubuntu-latest
          release_suffix: linux
        - os: macos-latest
          release_suffix: macos
        - os: windows-latest
          release_suffix: windows
  
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: "Set up Python"
      uses: actions/setup-python@v5
      with:
        python-version: 3.9

    - if: runner.os == 'Windows'
      name: Build release version - Windows
      run: |
        mkdir bin
        cd bin
        python3 ../configure.py --quick --buildsystem bat
        .\build.bat

    - if: runner.os != 'Windows'
      name: Build release version - Not windows
      run: |
        mkdir bin
        cd bin
        python3 ../configure.py
        make -j2

    - name: Set version string to the commit hash
      run: echo "RELEASE_VERSION=${{ github.sha }}" >> "$GITHUB_ENV"

    - name: Set version string based on trigger (ref_name if on tag)
      run: echo "RELEASE_VERSION=${{ github.ref_name }}" >> "$GITHUB_ENV"
      if: startsWith(github.ref, 'refs/tags/')
        
    - name: Make Zip
      run: |
        7z a -tzip ${{ github.workspace }}/minion.zip ${{ github.workspace }}/bin/minion*
        cp ${{ github.workspace }}/minion.zip minion-${RELEASE_VERSION}-${{ matrix.release_suffix }}.zip

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${RELEASE_VERSION}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          minion-${RELEASE_VERSION}-${{ matrix.release_suffix }}.zip
